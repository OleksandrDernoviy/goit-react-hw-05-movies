{"version":3,"file":"static/js/439.173b81d1.chunk.js","mappings":"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","sources":["api/ApiMovies.js","webpack://react-homework-template/./src/components/SearchBar/searchBar.module.css?272a","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/movies.module.css?e50d","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://api.themoviedb.org/3';\n// const API_KEY = 'ab383fb4029c9becd04a1d5c10db25f1';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhYjM4M2ZiNDAyOWM5YmVjZDA0YTFkNWMxMGRiMjVmMSIsInN1YiI6IjY1Njg3MTkwNjgwYmU4MDBjNmUwZGY4NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0yBTLZfzHtErfzDPvpPP0-1Yv51vf4xtsFUINYRp_-s',\n  },\n};\n\n\n\nexport const getTrendMovies = () => {\n  return axios.get(`${ BASE_URL }/trending/all/day?language=en-US`, options);\n  \n}\n\n// export const getTrendMovies = () => {\n//   return axios.get(`${BASE_URL}/movie/popular`, options);\n// };\n\n\nexport const getMovieById = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}?language=en-US`, options);\n};\n\nexport const getMovieByQuery =(query)  => {\n  return axios.get(`${BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)\n}\n\nexport const getCastById = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/credits`, options);\n};\n\nexport const getReviewById = movieId => {\n  return axios.get(`${BASE_URL}/movie/${movieId}/reviews`, options);\n};\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"searchBar_searchForm__nvYam\",\"searchBtn\":\"searchBar_searchBtn__vdT9o\",\"inputForm\":\"searchBar_inputForm__SWz7U\",\"inputSearch\":\"searchBar_inputSearch__i8Kz4\"};","import { useState } from \"react\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport css from './searchBar.module.css'\n\n\nconst SearchBar = ({submit}) => {\n    const [query, setQuery] = useState('');\n    const handleSubmit = event => {               \n        event.preventDefault();\n\n       if (query.trim() === '') {\n         toast('Ви нічого не ввели.');\n         return;\n       }\n        submit(query); \n        // submit({ query });\n       setQuery('');     \n     };\n\n  return (\n    <form className={css.searchForm} onSubmit={handleSubmit}>\n      <ToastContainer />\n      <input\n        name=\"query\"\n        className={css.inputForm}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button type=\"submit\" className={css.searchBtn}>\n        <span className=\"button-label\">Search</span>\n      </button>\n    </form>\n  );\n}\n\n\n\nexport default SearchBar\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"movies_movieList__UNxIB\",\"movieItem\":\"movies_movieItem__ELCkn\",\"movieImage\":\"movies_movieImage__pIktb\",\"movieTitle\":\"movies_movieTitle__uYN28\",\"searchMoviePageTitle\":\"movies_searchMoviePageTitle__GckiN\"};","\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { getMovieByQuery } from '../../api/ApiMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport css from './movies.module.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Movies = () => {\n  const [savedMovies, setSavedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation();\n  // console.log('location', location);\n\n  useEffect(() => {\n    if (query) {\n      getMovieByQuery(query).then(response => {\n        setSavedMovies(response.data.results);\n      });\n      // .catch(error => {\n      //   console.error('Помилка при отриманні фільмів', error)\n      //   toast.error('Помилка запиту')\n      // })\n    }\n  }, [query]);\n\n  const onSubmit = inputQuery => {\n    setSearchParams({ query: inputQuery });\n\n    getMovieByQuery(inputQuery)\n      .then(response => {\n        setSavedMovies(response.data.results);\n      })\n      .catch(error => {\n        console.error('Помилка при отриманні фільмів', error);\n        toast.error('Помилка запиту');\n      });\n  };\n  \nconst defaultImg =\n  'https://images.pexels.com/photos/3600078/pexels-photo-3600078.jpeg';\n  return (\n    <div>\n      <SearchBar submit={onSubmit} />\n      <ToastContainer />\n      <h2 className={css.searchMoviePageTitle}>Search movie</h2>\n      <ul className={css.movieList}>\n        {savedMovies &&\n          savedMovies.map(movie => (\n            <li key={movie.id} className={css.movieItem}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img\n                  className={css.movieImage}\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : defaultImg\n                  }\n                  alt=\"poster\"\n                />\n                <h2 className={css.movieTitle}>{movie.title}</h2>\n              </NavLink>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};                \nexport default Movies;\n\n\n\n"],"names":["BASE_URL","options","method","headers","accept","Authorization","getTrendMovies","axios","concat","getMovieById","movieId","getMovieByQuery","query","getCastById","getReviewById","_ref","submit","_useState","useState","_useState2","_slicedToArray","setQuery","_jsxs","className","css","onSubmit","event","preventDefault","trim","toast","children","_jsx","ToastContainer","name","type","autoComplete","autoFocus","placeholder","value","onChange","e","target","savedMovies","setSavedMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","location","useLocation","useEffect","then","response","data","results","SearchBar","inputQuery","catch","error","console","map","movie","NavLink","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}